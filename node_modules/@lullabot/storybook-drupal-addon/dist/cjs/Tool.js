"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tool = void 0;

var _react = _interopRequireDefault(require("react"));

var _api = require("@storybook/api");

var _components = require("@storybook/components");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var getValue = function getValue(value) {
  if (typeof value === 'string') {
    return {
      title: value
    };
  }

  return {
    title: value.title || ''
  };
};

var getDrupalThemes = function getDrupalThemes(themes, theme, onSelect) {
  return themes ? Object.entries(themes).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    return _objectSpread(_objectSpread({}, getValue(value)), {}, {
      id: key,
      active: key === theme,
      onClick: function onClick() {
        return onSelect(key);
      }
    });
  }) : [{
    id: 'none',
    title: 'No themes in parameters',
    active: true,
    onClick: function onClick() {}
  }];
};

var Tool = function Tool() {
  var _useGlobals = (0, _api.useGlobals)(),
      _useGlobals2 = _slicedToArray(_useGlobals, 2),
      _useGlobals2$ = _useGlobals2[0],
      drupalTheme = _useGlobals2$.drupalTheme,
      supportedDrupalThemes = _useGlobals2$.supportedDrupalThemes,
      updateGlobals = _useGlobals2[1];

  return /*#__PURE__*/_react["default"].createElement(_components.WithTooltip, {
    closeOnClick: true,
    placement: "top",
    trigger: "click",
    tooltip: function tooltip(_ref3) {
      var onHide = _ref3.onHide;
      return /*#__PURE__*/_react["default"].createElement(_components.TooltipLinkList, {
        links: getDrupalThemes(supportedDrupalThemes, drupalTheme, function (selected) {
          if (selected !== drupalTheme) {
            updateGlobals({
              drupalTheme: selected
            });
          }

          onHide();
        })
      });
    }
  }, /*#__PURE__*/_react["default"].createElement(_components.IconButton, {
    key: _constants.TOOL_ID,
    active: drupalTheme,
    title: "Select Drupal Theme"
  }, "\uD83D\uDCA7 Drupal Theme"));
};

exports.Tool = Tool;