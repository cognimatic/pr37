<?php

/**
 * @file
 * Implements the module install/uninstall process.
 *
 * Module developed by Civic www.civicuk.com.
 */

use Drupal\civiccookiecontrol\CCCConfigNames;

/**
 * Implements hook_uninstall().
 *
 * Clear configuration values.
 */
function civiccookiecontrol_uninstall() {
  \Drupal::configFactory()->getEditable(CCCConfigNames::COOKIECONTROL)->delete();
  \Drupal::configFactory()->getEditable('iab.settings')->delete();
  \Drupal::configFactory()->getEditable('iab2.settings')->delete();
  \Drupal::configFactory()->getEditable('filter.format.cookie_control_html')->delete();
  \Drupal::configFactory()->getEditable('editor.editor.cookie_control_html')->delete();
}

/**
 * Implements hook_install().
 *
 * Just flush caches.
 */
function civiccookiecontrol_install() {
  civiccookiecontrol_install_html_format();
  drupal_flush_all_caches();
}

/**
 * Cookie control 8.2 update.
 */
function civiccookiecontrol_update_8210(&$sandbox) {
  \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)
    ->set('civiccookiecontrol_encode_cookie', FALSE)
    ->set('civiccookiecontrol_sub_domains', TRUE)
    ->set('civiccookiecontrol_notify_once', FALSE)
    ->set('civiccookiecontrol_reject_button', FALSE)
    ->set('civiccookiecontrol_toggle_type', 'slider')
    ->set('civiccookiecontrol_close_style', 'icon')
    ->set('civiccookiecontrol_settings_style', 'button')
    ->set('civiccookiecontrol_access_key', 'C')
    ->set('civiccookiecontrol_highlight_focus', FALSE)
    ->set('civiccookiecontrol_reject_settings', 'Reject All')
    ->set('civiccookiecontrol_reject_text', 'Reject')
    ->set('civiccookiecontrol_notify_title_text', 'Your choice regarding cookies on this site')
    ->set('civiccookiecontrol_notify_desc_text', 'We use cookies to optimise site functionality and give you the best possible experience.')
    ->set('civiccookiecontrol_close_label', 'Close')
    ->set('civiccookiecontrol_accessibility_alert', 'This site uses cookies to store information. Press accesskey C to learn more about your options.')
    ->set('civiccookiecontrol_reject_text', 'Reject')
    ->set('civiccookiecontrol_accept_text_color', '')
    ->set('civiccookiecontrol_accept_background_color', '')
    ->set('civiccookiecontrol_drupal_admin', FALSE)
    ->save();
}

/**
 * Cookie control IAB update.
 */
function civiccookiecontrol_update_8211(&$sandbox) {
  \Drupal::configFactory()
    ->getEditable('iab.settings')
    ->set('iabCMP', FALSE)
    ->set('iabLanguage', 'en')
    ->set('iabGdprAppliesGlobally', TRUE)
    ->set('iabRecommendedState', '{ 1 : false, 2 : false, 3 : false, 4 : false, 5 : false }')
    ->set('iabLabelText', 'Ad Vendors')
    ->set('iabDescriptionText', 'When you visit our site, pre-selected companies may access and use certain information on your device to serve relevant ads or personalised content. Certain partners rely on your consent while others require you to opt-out.')
    ->set('iabConfigureText', 'Configure Ad Vendors')
    ->set('iabPanelTitleText', 'Ad Vendors : What information is collected and how it may be used')
    ->set('iabPanelIntroText', 'We and select companies may access information such as the device, operating system and type of browser your using; cookie information and information about your activity on that device, including web pages and mobile apps visited or used, along with the the IP address and associated geographic location of the device when it accesses a website or mobile application.')
    ->set('iabAboutIabText', 'You may control how this information is used by signaling your consent to the following purposes outlined by ')
    ->set('iabIabNameText', 'IAB Europe')
    ->set('iabIabLinkText', 'https://advertisingconsent.eu/')
    ->set('iabPanelBackText', 'Back to All Categories')
    ->set('iabVendorTitleText', 'Ad Vendors')
    ->set('iabVendorConfigureText', 'Show Ad Vendors')
    ->set('iabVendorBackText', 'Back to Ad Vendor Purposes')
    ->set('iabAcceptAllText', 'Accept All')
    ->set('iabRejectAllText', 'Reject All')
    ->set('iabBackText', 'Back')
    ->save();

}

/**
 * Cookie control fix onload issue.
 */
function civiccookiecontrol_update_8212(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL);

  if (empty($config->get('civiccookiecontrol_onload'))) {
    $config->set('civiccookiecontrol_onload', '')->save();
  }
}

/**
 * Cookie control support for both cookiecontrol 8 and cookiecontrol 9.
 */
function civiccookiecontrol_update_8400(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)
    ->set('civiccookiecontrol_reject_text_color', '')
    ->set('civiccookiecontrol_reject_background_color', '')
    ->set('civiccookiecontrol_locale_mode', 'browser')
    ->set('civiccookiecontrol_landmark', 'Cookie preferences.')
    ->set('civiccookiecontrol_corner_button', 'Set cookie preferences.');

  if (empty($config->get('civiccookiecontrol_api_key_version')) && !empty($config->get('civiccookiecontrol_api_key'))) {
    $config->set('civiccookiecontrol_api_key_version', 8);
  }
  else {
    $config->set('civiccookiecontrol_api_key_version', 9);
  }

  if (empty($config->get('civiccookiecontrol_mode'))) {
    $config->set('civiccookiecontrol_mode', 'GDPR');
  }

  if (empty($config->get('civiccookiecontrol_same_site_cookie'))) {
    $config->set('civiccookiecontrol_same_site_cookie', FALSE);
  }

  if (empty($config->get('civiccookiecontrol_accept_behaviour'))) {
    $config->set('civiccookiecontrol_accept_behaviour', 'all');
  }

  $config->save();
}

/**
 * Cookie control add support for IAB 2.0.
 */
function civiccookiecontrol_update_8401(&$sandbox) {
  $iabConfig = \Drupal::configFactory()
    ->getEditable('iab2.settings')

    ->set('iabCMP', FALSE)
    ->set('iabLanguage', 'en')
    ->set('iabPublisherCC', 'GB')
    ->set('iabPanelTitle', 'This site uses cookies to store information on your computer.')
    ->set('iabPanelIntro1', 'We and select companies use cookies to store and retrieve information from your browser. This information may be about you, your preferences or your device and is mostly used to make the site work as you expect. While the information does not usually directly identify you, details such as the device, operating system and type of browser may be considered personal data as it helps to create a more personalised web experience.')
    ->set('iabPanelIntro2', 'You can review how this information is used and customise your consent preferences for cookies or for any other identifying technology below by either purpose, feature or third party vendor.')
    ->set('iabPanelIntro3', 'Certain vendors may process personal data on the basis of legitimate interests to offer certain services. You have the right to object to the processing of data in this manner and can do so on an individual basis or globally by clicking "Reject All". Please refer to the vendor tab for more details. You may freely change your preferences at any time by clicking the Cookie Control icon.')
    ->set('iabAboutIab', 'The aforementioned personalised advertising services adhere to the')
    ->set('iabName', 'IAB Transparency and Consent Framework (TCF)')
    ->set('iabLink', 'https://iabeurope.eu/iab-europe-transparency-consent-framework-policies/')
    ->set('iabPurposes', 'Purposes')
    ->set('iabSpecialPurposes', 'Special Purposes')
    ->set('iabFeatures', 'Features')
    ->set('iabSpecialFeatures', 'Special Features')
    ->set('iabDataUse', 'How Data is used')
    ->set('iabVendors', 'Third Party Vendors')
    ->set('iabPurposeLegitimateInterest', 'I accept the processing of personal data on the grounds of Legitimate Interest for the purpose:')
    ->set('iabVendorLegitimateInterest', 'I accept the processing of personal data on the grounds of Legitimate Interest by:')
    ->set('iabObjectPurposeLegitimateInterest', 'I object to the processing of personal data on the grounds of Legitimate Interest for the purpose:')
    ->set('iabObjectVendorLegitimateInterest', 'I object to the processing of personal data on the grounds of Legitimate Interest by:')
    ->set('iabRelyConsent', 'Relying on consent for:')
    ->set('iabRelyLegitimateInterest', 'Relying on legitimate interests for:')
    ->set('iabSavePreferences', 'Save Preferences and Exit')
    ->set('iabAcceptAll', 'Accept All')
    ->set('iabRejectAll', 'Reject All');

  $iabConfig->save();

  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)

    ->set('civiccookiecontrol_notify_dismiss_button', TRUE)
    ->set('civiccookiecontrol_same_site_value', 'Strict')
    ->set('civiccookiecontrol_accept_settings', 'I Accept');

  $config->save();

}

/**
 * Cookie control add overlay.
 */
function civiccookiecontrol_update_8402(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)

    ->set('civiccookiecontrol_overlay', TRUE);

  $config->save();

  civiccookiecontrol_clear_tempstore();
}

/**
 * Cookie control v9.0 add ccpa statement.
 */
function civiccookiecontrol_update_8403(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)

    ->set('civiccookiecontrol_ccpa_privacynode', '')
    ->set('civiccookiecontrol_ccpa_stmt_descr', '')
    ->set('civiccookiecontrol_ccpa_stmt_name', '')
    ->set('civiccookiecontrol_ccpa_stmt_date', '')
    ->set('civiccookiecontrol_ccpa_stmt_url', '');

  $config->save();

  civiccookiecontrol_clear_tempstore();
}

/**
 * Update to support cookie control version 9.3.
 */
function civiccookiecontrol_update_8404(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)

    ->set('civiccookiecontrol_show_vendors', 'Show vendors within this category')
    ->set('civiccookiecontrol_third_party_cookies', 'This vendor may set third party cookies.')
    ->set('civiccookiecontrol_read_more', 'Read more')
    ->set('civiccookiecontrol_outline', TRUE)
    ->set('civiccookiecontrol_notify_font_color', '')
    ->set('civiccookiecontrol_notify_bg_color', '')
    ->set('civiccookiecontrol_close_text', '')
    ->set('civiccookiecontrol_close_bg_color', '');

  $config->save();

  civiccookiecontrol_clear_tempstore();
}

/**
 * IAB Updates for cookie control version 9.3.
 */
function civiccookiecontrol_update_8405(&$sandbox) {

  $iabConfig = \Drupal::configFactory()
    ->getEditable('iab2.settings')

    ->set('iabLegalDescription', 'Read full legal description')
    ->set('iabFullLegalDescription', TRUE)
    ->set('iabDropDowns', FALSE)
    ->set('iabSaveOnlyOnClose', FALSE);

  $iabConfig->save();

  civiccookiecontrol_clear_tempstore();
}

/**
 * Fix for IAB configurations not getting imported.
 */
function civiccookiecontrol_update_8406(&$sandbox) {

  $iabConfig = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::IAB);

  $iabConfigOld = \Drupal::configFactory()
    ->getEditable('iab.settings');

  $iabConfig->set('iabCMP', $iabConfigOld->get('iabCMP'))
    ->set('iabLanguage', $iabConfigOld->get('iabLanguage'))
    ->set('iabGdprAppliesGlobally', $iabConfigOld->get('iabGdprAppliesGlobally'))
    ->set('iabRecommendedState', $iabConfigOld->get('iabRecommendedState'))
    ->set('iabLabelText', $iabConfigOld->get('iabLabelText'))

    ->set('iabDescriptionText', $iabConfigOld->get('iabDescriptionText'))
    ->set('iabConfigureText', $iabConfigOld->get('iabConfigureText'))
    ->set('iabPanelTitleText', $iabConfigOld->get('iabPanelTitleText'))
    ->set('iabPanelIntroText', $iabConfigOld->get('iabPanelIntroText'))
    ->set('iabAboutIabText', $iabConfigOld->get('iabAboutIabText'))

    ->set('iabIabNameText', $iabConfigOld->get('iabIabNameText'))
    ->set('iabIabLinkText', $iabConfigOld->get('iabIabLinkText'))
    ->set('iabPanelBackText', $iabConfigOld->get('iabPanelBackText'))
    ->set('iabVendorTitleText', $iabConfigOld->get('iabVendorTitleText'))
    ->set('iabVendorConfigureText', $iabConfigOld->get('iabVendorConfigureText'))

    ->set('iabVendorBackText', $iabConfigOld->get('iabVendorBackText'))
    ->set('iabAcceptAllText', $iabConfigOld->get('iabAcceptAllText'))
    ->set('iabRejectAllText', $iabConfigOld->get('iabRejectAllText'))
    ->set('iabBackText', $iabConfigOld->get('iabBackText'));

  $iabConfig->save();

  $iabConfigOld->delete();

  civiccookiecontrol_clear_tempstore();
}

/**
 * Fix for IAB 2 configurations not getting imported.
 */
function civiccookiecontrol_update_8407(&$sandbox) {
  $iab2ConfigOld = \Drupal::configFactory()
    ->getEditable('iab2.settings');

  $iab2Config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::IAB2);

  $iab2Config->set('iabCMP', $iab2ConfigOld->get('iabCMP'))
    ->set('iabLanguage', $iab2ConfigOld->get('iabLanguage'))
    ->set('iabPublisherCC', $iab2ConfigOld->get('iabPublisherCC'))
    ->set('iabPanelTitle', $iab2ConfigOld->get('iabPanelTitle'))
    ->set('iabPanelIntro1', $iab2ConfigOld->get('iabPanelIntro1'))

    ->set('iabPanelIntro2', $iab2ConfigOld->get('iabPanelIntro2'))
    ->set('iabPanelIntro3', $iab2ConfigOld->get('iabPanelIntro3'))
    ->set('iabAboutIab', $iab2ConfigOld->get('iabAboutIab'))
    ->set('iabName', $iab2ConfigOld->get('iabName'))
    ->set('iabLink', $iab2ConfigOld->get('iabLink'))

    ->set('iabPurposes', $iab2ConfigOld->get('iabPurposes'))
    ->set('iabSpecialPurposes', $iab2ConfigOld->get('iabSpecialPurposes'))
    ->set('iabFeatures', $iab2ConfigOld->get('iabFeatures'))
    ->set('iabSpecialFeatures', $iab2ConfigOld->get('iabSpecialFeatures'))
    ->set('iabDataUse', $iab2ConfigOld->get('iabDataUse'))

    ->set('iabVendors', $iab2ConfigOld->get('iabVendors'))
    ->set('iabPurposeLegitimateInterest', $iab2ConfigOld->get('iabPurposeLegitimateInterest'))
    ->set('iabVendorLegitimateInterest', $iab2ConfigOld->get('iabVendorLegitimateInterest'))
    ->set('iabObjectPurposeLegitimateInterest', $iab2ConfigOld->get('iabObjectPurposeLegitimateInterest'))
    ->set('iabObjectVendorLegitimateInterest', $iab2ConfigOld->get('iabObjectVendorLegitimateInterest'))

    ->set('iabRelyConsent', $iab2ConfigOld->get('iabRelyConsent'))
    ->set('iabRelyLegitimateInterest', $iab2ConfigOld->get('iabRelyLegitimateInterest'))
    ->set('iabSavePreferences', $iab2ConfigOld->get('iabSavePreferences'))
    ->set('iabAcceptAll', $iab2ConfigOld->get('iabAcceptAll'))
    ->set('iabRejectAll', $iab2ConfigOld->get('iabRejectAll'))

    ->set('iabLegalDescription', $iab2ConfigOld->get('iabLegalDescription'))
    ->set('iabFullLegalDescription', $iab2ConfigOld->get('iabFullLegalDescription'))
    ->set('iabDropDowns', $iab2ConfigOld->get('iabDropDowns'))
    ->set('iabSaveOnlyOnClose', $iab2ConfigOld->get('iabSaveOnlyOnClose'));

  $iab2Config->save();

  $iab2ConfigOld->delete();

  civiccookiecontrol_clear_tempstore();
}

/**
 * IAB Updates for cookie control version 9.4.
 */
function civiccookiecontrol_update_8408(&$sandbox) {
  $iab2Config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::IAB2)

    ->set('iabCookieMaxAge', 'Cookie Max-Age:')
    ->set('iabUsesNonCookieAccessTrue', 'Uses other means for storing information, eg. localstorage')
    ->set('iabUsesNonCookieAccessFalse', 'Only uses cookies to store information')
    ->set('iabStorageDisclosures', 'Device Storage Duration & Access Disclosure')
    ->set('iabDisclosureDetailsColumn', 'Storage Details')
    ->set('iabDisclosurePurposesColumn', 'Purposes')
    ->set('iabSeconds', 'seconds')
    ->set('iabMinutes', 'minutes')
    ->set('iabHours', 'Hours')
    ->set('iabDays', 'days');

  $iab2Config->save();
  civiccookiecontrol_clear_tempstore();
}

/**
 * Update for Cookie Control 9.6.x, add disable site scrolling.
 */
function civiccookiecontrol_update_8409(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL);

  $config->set('civiccookiecontrol_site_scrolling', FALSE)->save();
  $config->save();

  civiccookiecontrol_clear_tempstore();
}

/**
 * Update to install custom CookieControl html format.
 */
function civiccookiecontrol_update_8410(&$sandbox) {
  civiccookiecontrol_install_html_format();
  civiccookiecontrol_clear_tempstore();
}

/**
 * Cookie control v9.8 customise language of objection button in CCPA notice.
 */
function civiccookiecontrol_update_8411(&$sandbox) {
  $config = \Drupal::configFactory()
    ->getEditable(CCCConfigNames::COOKIECONTROL)
    ->set('civiccookiecontrol_ccpa_stmt_rejectb', '');
  $config->save();

  civiccookiecontrol_clear_tempstore();
}
